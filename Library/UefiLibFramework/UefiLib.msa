<?xml version="1.0" encoding="UTF-8"?>
<ModuleSurfaceArea xmlns="http://www.TianoCore.org/2006/Edk2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <MsaHeader>
    <ModuleName>UefiLib</ModuleName>
    <ModuleType>DXE_DRIVER</ModuleType>
    <GuidValue>3a004ba5-efe0-4a61-9f1a-267a46ae5ba9</GuidValue>
    <Version>1.0</Version>
    <Abstract>Component description file for the entry point to a EFIDXE Drivers</Abstract>
    <Description>Library to abstract Framework extensions that conflict with UEFI 2.0 Specification

 Help Port Framework/Tinao code that has conflicts with UEFI 2.0 by hiding the oldconflicts with library functions and supporting implementations of the old 
 (EDK/EFI 1.10) and new (EDK II/UEFI 2.0) way. This module is a DXE driver as  it contains DXE enum extensions for EFI event services.</Description>
    <Copyright>Copyright (c) 2006, Intel Corporation.</Copyright>
    <License>All rights reserved. This program and the accompanying materials
      are licensed and made available under the terms and conditions of the BSD License
      which accompanies this distribution.  The full text of the license may be found at
      http://opensource.org/licenses/bsd-license.php
      THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
      WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.</License>
    <Specification>FRAMEWORK_BUILD_PACKAGING_SPECIFICATION   0x00000052</Specification>
  </MsaHeader>
  <ModuleDefinitions>
    <SupportedArchitectures>IA32 X64 IPF EBC</SupportedArchitectures>
    <BinaryModule>false</BinaryModule>
    <OutputFileBasename>UefiLib</OutputFileBasename>
  </ModuleDefinitions>
  <LibraryClassDefinitions>
    <LibraryClass Usage="ALWAYS_PRODUCED" SupModuleList="DXE_CORE DXE_DRIVER DXE_RUNTIME_DRIVER DXE_SAL_DRIVER DXE_SMM_DRIVER UEFI_APPLICATION UEFI_DRIVER">
      <Keyword>UefiLib</Keyword>
    </LibraryClass>
    <LibraryClass Usage="ALWAYS_CONSUMED">
      <Keyword>UefiBootServicesTableLib</Keyword>
    </LibraryClass>
    <LibraryClass Usage="ALWAYS_CONSUMED">
      <Keyword>BaseLib</Keyword>
    </LibraryClass>
    <LibraryClass Usage="ALWAYS_CONSUMED">
      <Keyword>BaseMemoryLib</Keyword>
    </LibraryClass>
    <LibraryClass Usage="ALWAYS_CONSUMED">
      <Keyword>DebugLib</Keyword>
    </LibraryClass>
    <LibraryClass Usage="ALWAYS_CONSUMED">
      <Keyword>MemoryAllocationLib</Keyword>
    </LibraryClass>
    <LibraryClass Usage="ALWAYS_CONSUMED">
      <Keyword>PcdLib</Keyword>
    </LibraryClass>
    <LibraryClass Usage="ALWAYS_CONSUMED">
      <Keyword>PrintLib</Keyword>
    </LibraryClass>
  </LibraryClassDefinitions>
  <SourceFiles>
    <Filename>UefiLib.c</Filename>
    <Filename>Console.c</Filename>
    <Filename>UefiNotTiano.c</Filename>
    <Filename>UefiLibPrint.c</Filename>
  </SourceFiles>
  <PackageDependencies>
    <Package PackageGuid="5e0e9358-46b6-4ae2-8218-4ab8b9bbdcec"/>
  </PackageDependencies>
  <Guids>
    <GuidCNames Usage="ALWAYS_CONSUMED">
      <GuidCName>gEfiEventLegacyBootGuid</GuidCName>
    </GuidCNames>
    <GuidCNames Usage="ALWAYS_CONSUMED">
      <GuidCName>gEfiEventReadyToBootGuid</GuidCName>
    </GuidCNames>
    <GuidCNames Usage="ALWAYS_CONSUMED">
      <GuidCName>gEfiFrameworkDevicePathGuid</GuidCName>
    </GuidCNames>
  </Guids>
  <Externs>
    <Specification>EFI_SPECIFICATION_VERSION 0x00020000</Specification>
    <Specification>EDK_RELEASE_VERSION 0x00020000</Specification>
  </Externs>
  <PcdCoded>
    <PcdEntry PcdItemType="FIXED_AT_BUILD" Usage="ALWAYS_CONSUMED">
      <C_Name>PcdUefiLibMaxPrintBufferSize</C_Name>
      <TokenSpaceGuidCName>gEfiMdePkgTokenSpaceGuid</TokenSpaceGuidCName>
      <HelpText>This PCD is used by UefiLib APIs, which are Print, ErrorPrint, AsciiPrint, AsciiErrorPrint. If the length of the formatted Unicode or ASCII string is greater than PcdUefiLibMaxPrintBufferSize, then only the first (PcdUefiLibMaxPrintBufferSize / Sizeof(CHAR16)) Unicode characters or PcdUefiLibMaxPrintBufferSize Ascii characters are sent to the respective console.</HelpText>
    </PcdEntry>
  </PcdCoded>
</ModuleSurfaceArea>